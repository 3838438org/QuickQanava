// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quickqanava.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "quickqanava.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace qan {
namespace pb {

namespace {

const ::google::protobuf::Descriptor* Style_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Style_reflection_ = NULL;
const ::google::protobuf::Descriptor* StyleManager_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StyleManager_reflection_ = NULL;
const ::google::protobuf::Descriptor* StyleManager_DefaultNodeStylesEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* StyleManager_DefaultEdgeStylesEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Node_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Node_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_quickqanava_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_quickqanava_2eproto() {
  protobuf_AddDesc_quickqanava_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "quickqanava.proto");
  GOOGLE_CHECK(file != NULL);
  Style_descriptor_ = file->message_type(0);
  static const int Style_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Style, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Style, meta_target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Style, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Style, target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Style, properties_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Style, node_ids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Style, edge_ids_),
  };
  Style_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Style_descriptor_,
      Style::default_instance_,
      Style_offsets_,
      -1,
      -1,
      -1,
      sizeof(Style),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Style, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Style, _is_default_instance_));
  StyleManager_descriptor_ = file->message_type(1);
  static const int StyleManager_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StyleManager, style_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StyleManager, styles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StyleManager, default_node_styles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StyleManager, default_edge_styles_),
  };
  StyleManager_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StyleManager_descriptor_,
      StyleManager::default_instance_,
      StyleManager_offsets_,
      -1,
      -1,
      -1,
      sizeof(StyleManager),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StyleManager, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StyleManager, _is_default_instance_));
  StyleManager_DefaultNodeStylesEntry_descriptor_ = StyleManager_descriptor_->nested_type(0);
  StyleManager_DefaultEdgeStylesEntry_descriptor_ = StyleManager_descriptor_->nested_type(1);
  Node_descriptor_ = file->message_type(2);
  static const int Node_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, base_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, style_id_),
  };
  Node_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Node_descriptor_,
      Node::default_instance_,
      Node_offsets_,
      -1,
      -1,
      -1,
      sizeof(Node),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, _is_default_instance_));
  Graph_descriptor_ = file->message_type(3);
  static const int Graph_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph, graph_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph, style_manager_),
  };
  Graph_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Graph_descriptor_,
      Graph::default_instance_,
      Graph_offsets_,
      -1,
      -1,
      -1,
      sizeof(Graph),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_quickqanava_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Style_descriptor_, &Style::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StyleManager_descriptor_, &StyleManager::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        StyleManager_DefaultNodeStylesEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::google::protobuf::int32,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
            0>::CreateDefaultInstance(
                StyleManager_DefaultNodeStylesEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        StyleManager_DefaultEdgeStylesEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::google::protobuf::int32,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
            0>::CreateDefaultInstance(
                StyleManager_DefaultEdgeStylesEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Node_descriptor_, &Node::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Graph_descriptor_, &Graph::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_quickqanava_2eproto() {
  delete Style::default_instance_;
  delete Style_reflection_;
  delete StyleManager::default_instance_;
  delete StyleManager_reflection_;
  delete Node::default_instance_;
  delete Node_reflection_;
  delete Graph::default_instance_;
  delete Graph_reflection_;
}

void protobuf_AddDesc_quickqanava_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_quickqanava_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::qps::pb::protobuf_AddDesc_quickproperties_2eproto();
  ::gtpo::pb::protobuf_AddDesc_gtpo_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021quickqanava.proto\022\006qan.pb\032\025quickproper"
    "ties.proto\032\ngtpo.proto\"\230\001\n\005Style\022\n\n\002id\030\001"
    " \001(\005\022\023\n\013meta_target\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022"
    "\016\n\006target\030\004 \001(\t\022$\n\nproperties\030\005 \001(\0132\020.qp"
    "s.pb.QtObject\022\024\n\010node_ids\030\006 \003(\005B\002\020\001\022\024\n\010e"
    "dge_ids\030\007 \003(\005B\002\020\001\"\312\002\n\014StyleManager\022\023\n\013st"
    "yle_count\030\001 \001(\005\022\035\n\006styles\030\002 \003(\0132\r.qan.pb"
    ".Style\022H\n\023default_node_styles\030\003 \003(\0132+.qa"
    "n.pb.StyleManager.DefaultNodeStylesEntry"
    "\022H\n\023default_edge_styles\030\004 \003(\0132+.qan.pb.S"
    "tyleManager.DefaultEdgeStylesEntry\0328\n\026De"
    "faultNodeStylesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005val"
    "ue\030\002 \001(\005:\0028\001\0328\n\026DefaultEdgeStylesEntry\022\013"
    "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\005:\0028\001\"5\n\004Node\022\033"
    "\n\004base\030\001 \001(\0132\r.gtpo.pb.Node\022\020\n\010style_id\030"
    "\002 \001(\005\"S\n\005Graph\022\035\n\005graph\030\001 \001(\0132\016.gtpo.pb."
    "Graph\022+\n\rstyle_manager\030\002 \001(\0132\024.qan.pb.St"
    "yleManagerb\006proto3", 698);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "quickqanava.proto", &protobuf_RegisterTypes);
  Style::default_instance_ = new Style();
  StyleManager::default_instance_ = new StyleManager();
  Node::default_instance_ = new Node();
  Graph::default_instance_ = new Graph();
  Style::default_instance_->InitAsDefaultInstance();
  StyleManager::default_instance_->InitAsDefaultInstance();
  Node::default_instance_->InitAsDefaultInstance();
  Graph::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_quickqanava_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_quickqanava_2eproto {
  StaticDescriptorInitializer_quickqanava_2eproto() {
    protobuf_AddDesc_quickqanava_2eproto();
  }
} static_descriptor_initializer_quickqanava_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Style::kIdFieldNumber;
const int Style::kMetaTargetFieldNumber;
const int Style::kNameFieldNumber;
const int Style::kTargetFieldNumber;
const int Style::kPropertiesFieldNumber;
const int Style::kNodeIdsFieldNumber;
const int Style::kEdgeIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Style::Style()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:qan.pb.Style)
}

void Style::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  properties_ = const_cast< ::qps::pb::QtObject*>(&::qps::pb::QtObject::default_instance());
}

Style::Style(const Style& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:qan.pb.Style)
}

void Style::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  meta_target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  properties_ = NULL;
}

Style::~Style() {
  // @@protoc_insertion_point(destructor:qan.pb.Style)
  SharedDtor();
}

void Style::SharedDtor() {
  meta_target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete properties_;
  }
}

void Style::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Style::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Style_descriptor_;
}

const Style& Style::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_quickqanava_2eproto();
  return *default_instance_;
}

Style* Style::default_instance_ = NULL;

Style* Style::New(::google::protobuf::Arena* arena) const {
  Style* n = new Style;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Style::Clear() {
// @@protoc_insertion_point(message_clear_start:qan.pb.Style)
  id_ = 0;
  meta_target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && properties_ != NULL) delete properties_;
  properties_ = NULL;
  node_ids_.Clear();
  edge_ids_.Clear();
}

bool Style::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qan.pb.Style)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_meta_target;
        break;
      }

      // optional string meta_target = 2;
      case 2: {
        if (tag == 18) {
         parse_meta_target:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_meta_target()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->meta_target().data(), this->meta_target().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qan.pb.Style.meta_target"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qan.pb.Style.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_target;
        break;
      }

      // optional string target = 4;
      case 4: {
        if (tag == 34) {
         parse_target:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target().data(), this->target().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qan.pb.Style.target"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_properties;
        break;
      }

      // optional .qps.pb.QtObject properties = 5;
      case 5: {
        if (tag == 42) {
         parse_properties:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_properties()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_node_ids;
        break;
      }

      // repeated int32 node_ids = 6 [packed = true];
      case 6: {
        if (tag == 50) {
         parse_node_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_node_ids())));
        } else if (tag == 48) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50, input, this->mutable_node_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_edge_ids;
        break;
      }

      // repeated int32 edge_ids = 7 [packed = true];
      case 7: {
        if (tag == 58) {
         parse_edge_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_edge_ids())));
        } else if (tag == 56) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 58, input, this->mutable_edge_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qan.pb.Style)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qan.pb.Style)
  return false;
#undef DO_
}

void Style::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qan.pb.Style)
  // optional int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string meta_target = 2;
  if (this->meta_target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->meta_target().data(), this->meta_target().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qan.pb.Style.meta_target");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->meta_target(), output);
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qan.pb.Style.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string target = 4;
  if (this->target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target().data(), this->target().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qan.pb.Style.target");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->target(), output);
  }

  // optional .qps.pb.QtObject properties = 5;
  if (this->has_properties()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->properties_, output);
  }

  // repeated int32 node_ids = 6 [packed = true];
  if (this->node_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_node_ids_cached_byte_size_);
  }
  for (int i = 0; i < this->node_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->node_ids(i), output);
  }

  // repeated int32 edge_ids = 7 [packed = true];
  if (this->edge_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_edge_ids_cached_byte_size_);
  }
  for (int i = 0; i < this->edge_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->edge_ids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qan.pb.Style)
}

::google::protobuf::uint8* Style::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:qan.pb.Style)
  // optional int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string meta_target = 2;
  if (this->meta_target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->meta_target().data(), this->meta_target().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qan.pb.Style.meta_target");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->meta_target(), target);
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qan.pb.Style.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional string target = 4;
  if (this->target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target().data(), this->target().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qan.pb.Style.target");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->target(), target);
  }

  // optional .qps.pb.QtObject properties = 5;
  if (this->has_properties()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->properties_, false, target);
  }

  // repeated int32 node_ids = 6 [packed = true];
  if (this->node_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _node_ids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->node_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->node_ids(i), target);
  }

  // repeated int32 edge_ids = 7 [packed = true];
  if (this->edge_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _edge_ids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->edge_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->edge_ids(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qan.pb.Style)
  return target;
}

int Style::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:qan.pb.Style)
  int total_size = 0;

  // optional int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional string meta_target = 2;
  if (this->meta_target().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->meta_target());
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string target = 4;
  if (this->target().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target());
  }

  // optional .qps.pb.QtObject properties = 5;
  if (this->has_properties()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->properties_);
  }

  // repeated int32 node_ids = 6 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->node_ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->node_ids(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _node_ids_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 edge_ids = 7 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->edge_ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->edge_ids(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _edge_ids_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Style::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qan.pb.Style)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Style* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Style>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qan.pb.Style)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qan.pb.Style)
    MergeFrom(*source);
  }
}

void Style::MergeFrom(const Style& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qan.pb.Style)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  node_ids_.MergeFrom(from.node_ids_);
  edge_ids_.MergeFrom(from.edge_ids_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.meta_target().size() > 0) {

    meta_target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.meta_target_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.target().size() > 0) {

    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
  if (from.has_properties()) {
    mutable_properties()->::qps::pb::QtObject::MergeFrom(from.properties());
  }
}

void Style::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qan.pb.Style)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Style::CopyFrom(const Style& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qan.pb.Style)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Style::IsInitialized() const {

  return true;
}

void Style::Swap(Style* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Style::InternalSwap(Style* other) {
  std::swap(id_, other->id_);
  meta_target_.Swap(&other->meta_target_);
  name_.Swap(&other->name_);
  target_.Swap(&other->target_);
  std::swap(properties_, other->properties_);
  node_ids_.UnsafeArenaSwap(&other->node_ids_);
  edge_ids_.UnsafeArenaSwap(&other->edge_ids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Style::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Style_descriptor_;
  metadata.reflection = Style_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Style

// optional int32 id = 1;
void Style::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 Style::id() const {
  // @@protoc_insertion_point(field_get:qan.pb.Style.id)
  return id_;
}
 void Style::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:qan.pb.Style.id)
}

// optional string meta_target = 2;
void Style::clear_meta_target() {
  meta_target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Style::meta_target() const {
  // @@protoc_insertion_point(field_get:qan.pb.Style.meta_target)
  return meta_target_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Style::set_meta_target(const ::std::string& value) {
  
  meta_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qan.pb.Style.meta_target)
}
 void Style::set_meta_target(const char* value) {
  
  meta_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qan.pb.Style.meta_target)
}
 void Style::set_meta_target(const char* value, size_t size) {
  
  meta_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qan.pb.Style.meta_target)
}
 ::std::string* Style::mutable_meta_target() {
  
  // @@protoc_insertion_point(field_mutable:qan.pb.Style.meta_target)
  return meta_target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Style::release_meta_target() {
  // @@protoc_insertion_point(field_release:qan.pb.Style.meta_target)
  
  return meta_target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Style::set_allocated_meta_target(::std::string* meta_target) {
  if (meta_target != NULL) {
    
  } else {
    
  }
  meta_target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), meta_target);
  // @@protoc_insertion_point(field_set_allocated:qan.pb.Style.meta_target)
}

// optional string name = 3;
void Style::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Style::name() const {
  // @@protoc_insertion_point(field_get:qan.pb.Style.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Style::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qan.pb.Style.name)
}
 void Style::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qan.pb.Style.name)
}
 void Style::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qan.pb.Style.name)
}
 ::std::string* Style::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:qan.pb.Style.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Style::release_name() {
  // @@protoc_insertion_point(field_release:qan.pb.Style.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Style::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:qan.pb.Style.name)
}

// optional string target = 4;
void Style::clear_target() {
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Style::target() const {
  // @@protoc_insertion_point(field_get:qan.pb.Style.target)
  return target_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Style::set_target(const ::std::string& value) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qan.pb.Style.target)
}
 void Style::set_target(const char* value) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qan.pb.Style.target)
}
 void Style::set_target(const char* value, size_t size) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qan.pb.Style.target)
}
 ::std::string* Style::mutable_target() {
  
  // @@protoc_insertion_point(field_mutable:qan.pb.Style.target)
  return target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Style::release_target() {
  // @@protoc_insertion_point(field_release:qan.pb.Style.target)
  
  return target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Style::set_allocated_target(::std::string* target) {
  if (target != NULL) {
    
  } else {
    
  }
  target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target);
  // @@protoc_insertion_point(field_set_allocated:qan.pb.Style.target)
}

// optional .qps.pb.QtObject properties = 5;
bool Style::has_properties() const {
  return !_is_default_instance_ && properties_ != NULL;
}
void Style::clear_properties() {
  if (GetArenaNoVirtual() == NULL && properties_ != NULL) delete properties_;
  properties_ = NULL;
}
const ::qps::pb::QtObject& Style::properties() const {
  // @@protoc_insertion_point(field_get:qan.pb.Style.properties)
  return properties_ != NULL ? *properties_ : *default_instance_->properties_;
}
::qps::pb::QtObject* Style::mutable_properties() {
  
  if (properties_ == NULL) {
    properties_ = new ::qps::pb::QtObject;
  }
  // @@protoc_insertion_point(field_mutable:qan.pb.Style.properties)
  return properties_;
}
::qps::pb::QtObject* Style::release_properties() {
  // @@protoc_insertion_point(field_release:qan.pb.Style.properties)
  
  ::qps::pb::QtObject* temp = properties_;
  properties_ = NULL;
  return temp;
}
void Style::set_allocated_properties(::qps::pb::QtObject* properties) {
  delete properties_;
  properties_ = properties;
  if (properties) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:qan.pb.Style.properties)
}

// repeated int32 node_ids = 6 [packed = true];
int Style::node_ids_size() const {
  return node_ids_.size();
}
void Style::clear_node_ids() {
  node_ids_.Clear();
}
 ::google::protobuf::int32 Style::node_ids(int index) const {
  // @@protoc_insertion_point(field_get:qan.pb.Style.node_ids)
  return node_ids_.Get(index);
}
 void Style::set_node_ids(int index, ::google::protobuf::int32 value) {
  node_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:qan.pb.Style.node_ids)
}
 void Style::add_node_ids(::google::protobuf::int32 value) {
  node_ids_.Add(value);
  // @@protoc_insertion_point(field_add:qan.pb.Style.node_ids)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Style::node_ids() const {
  // @@protoc_insertion_point(field_list:qan.pb.Style.node_ids)
  return node_ids_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Style::mutable_node_ids() {
  // @@protoc_insertion_point(field_mutable_list:qan.pb.Style.node_ids)
  return &node_ids_;
}

// repeated int32 edge_ids = 7 [packed = true];
int Style::edge_ids_size() const {
  return edge_ids_.size();
}
void Style::clear_edge_ids() {
  edge_ids_.Clear();
}
 ::google::protobuf::int32 Style::edge_ids(int index) const {
  // @@protoc_insertion_point(field_get:qan.pb.Style.edge_ids)
  return edge_ids_.Get(index);
}
 void Style::set_edge_ids(int index, ::google::protobuf::int32 value) {
  edge_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:qan.pb.Style.edge_ids)
}
 void Style::add_edge_ids(::google::protobuf::int32 value) {
  edge_ids_.Add(value);
  // @@protoc_insertion_point(field_add:qan.pb.Style.edge_ids)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Style::edge_ids() const {
  // @@protoc_insertion_point(field_list:qan.pb.Style.edge_ids)
  return edge_ids_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Style::mutable_edge_ids() {
  // @@protoc_insertion_point(field_mutable_list:qan.pb.Style.edge_ids)
  return &edge_ids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StyleManager::kStyleCountFieldNumber;
const int StyleManager::kStylesFieldNumber;
const int StyleManager::kDefaultNodeStylesFieldNumber;
const int StyleManager::kDefaultEdgeStylesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StyleManager::StyleManager()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:qan.pb.StyleManager)
}

void StyleManager::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

StyleManager::StyleManager(const StyleManager& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:qan.pb.StyleManager)
}

void StyleManager::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  style_count_ = 0;
  default_node_styles_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  default_node_styles_.SetEntryDescriptor(
      &::qan::pb::StyleManager_DefaultNodeStylesEntry_descriptor_);
  default_edge_styles_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  default_edge_styles_.SetEntryDescriptor(
      &::qan::pb::StyleManager_DefaultEdgeStylesEntry_descriptor_);
}

StyleManager::~StyleManager() {
  // @@protoc_insertion_point(destructor:qan.pb.StyleManager)
  SharedDtor();
}

void StyleManager::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StyleManager::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StyleManager::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StyleManager_descriptor_;
}

const StyleManager& StyleManager::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_quickqanava_2eproto();
  return *default_instance_;
}

StyleManager* StyleManager::default_instance_ = NULL;

StyleManager* StyleManager::New(::google::protobuf::Arena* arena) const {
  StyleManager* n = new StyleManager;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StyleManager::Clear() {
// @@protoc_insertion_point(message_clear_start:qan.pb.StyleManager)
  style_count_ = 0;
  styles_.Clear();
  default_node_styles_.Clear();
  default_edge_styles_.Clear();
}

bool StyleManager::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qan.pb.StyleManager)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 style_count = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &style_count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_styles;
        break;
      }

      // repeated .qan.pb.Style styles = 2;
      case 2: {
        if (tag == 18) {
         parse_styles:
          DO_(input->IncrementRecursionDepth());
         parse_loop_styles:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_styles()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_styles;
        if (input->ExpectTag(26)) goto parse_loop_default_node_styles;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // map<string, int32> default_node_styles = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_default_node_styles:
          StyleManager_DefaultNodeStylesEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 > > parser(&default_node_styles_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qan.pb.StyleManager.DefaultNodeStylesEntry.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_default_node_styles;
        if (input->ExpectTag(34)) goto parse_loop_default_edge_styles;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // map<string, int32> default_edge_styles = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_default_edge_styles:
          StyleManager_DefaultEdgeStylesEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 > > parser(&default_edge_styles_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qan.pb.StyleManager.DefaultEdgeStylesEntry.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_default_edge_styles;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qan.pb.StyleManager)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qan.pb.StyleManager)
  return false;
#undef DO_
}

void StyleManager::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qan.pb.StyleManager)
  // optional int32 style_count = 1;
  if (this->style_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->style_count(), output);
  }

  // repeated .qan.pb.Style styles = 2;
  for (unsigned int i = 0, n = this->styles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->styles(i), output);
  }

  // map<string, int32> default_node_styles = 3;
  if (!this->default_node_styles().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "qan.pb.StyleManager.DefaultNodeStylesEntry.key");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->default_node_styles().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->default_node_styles().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->default_node_styles().begin();
          it != this->default_node_styles().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<StyleManager_DefaultNodeStylesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(default_node_styles_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<StyleManager_DefaultNodeStylesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->default_node_styles().begin();
          it != this->default_node_styles().end(); ++it) {
        entry.reset(default_node_styles_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, int32> default_edge_styles = 4;
  if (!this->default_edge_styles().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "qan.pb.StyleManager.DefaultEdgeStylesEntry.key");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->default_edge_styles().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->default_edge_styles().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->default_edge_styles().begin();
          it != this->default_edge_styles().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<StyleManager_DefaultEdgeStylesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(default_edge_styles_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<StyleManager_DefaultEdgeStylesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->default_edge_styles().begin();
          it != this->default_edge_styles().end(); ++it) {
        entry.reset(default_edge_styles_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:qan.pb.StyleManager)
}

::google::protobuf::uint8* StyleManager::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:qan.pb.StyleManager)
  // optional int32 style_count = 1;
  if (this->style_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->style_count(), target);
  }

  // repeated .qan.pb.Style styles = 2;
  for (unsigned int i = 0, n = this->styles_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->styles(i), false, target);
  }

  // map<string, int32> default_node_styles = 3;
  if (!this->default_node_styles().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "qan.pb.StyleManager.DefaultNodeStylesEntry.key");
      }
    };

    if (deterministic &&
        this->default_node_styles().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->default_node_styles().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->default_node_styles().begin();
          it != this->default_node_styles().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<StyleManager_DefaultNodeStylesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(default_node_styles_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<StyleManager_DefaultNodeStylesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->default_node_styles().begin();
          it != this->default_node_styles().end(); ++it) {
        entry.reset(default_node_styles_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, int32> default_edge_styles = 4;
  if (!this->default_edge_styles().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "qan.pb.StyleManager.DefaultEdgeStylesEntry.key");
      }
    };

    if (deterministic &&
        this->default_edge_styles().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->default_edge_styles().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->default_edge_styles().begin();
          it != this->default_edge_styles().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<StyleManager_DefaultEdgeStylesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(default_edge_styles_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<StyleManager_DefaultEdgeStylesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->default_edge_styles().begin();
          it != this->default_edge_styles().end(); ++it) {
        entry.reset(default_edge_styles_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:qan.pb.StyleManager)
  return target;
}

int StyleManager::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:qan.pb.StyleManager)
  int total_size = 0;

  // optional int32 style_count = 1;
  if (this->style_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->style_count());
  }

  // repeated .qan.pb.Style styles = 2;
  total_size += 1 * this->styles_size();
  for (int i = 0; i < this->styles_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->styles(i));
  }

  // map<string, int32> default_node_styles = 3;
  total_size += 1 * this->default_node_styles_size();
  {
    ::google::protobuf::scoped_ptr<StyleManager_DefaultNodeStylesEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
        it = this->default_node_styles().begin();
        it != this->default_node_styles().end(); ++it) {
      entry.reset(default_node_styles_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, int32> default_edge_styles = 4;
  total_size += 1 * this->default_edge_styles_size();
  {
    ::google::protobuf::scoped_ptr<StyleManager_DefaultEdgeStylesEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
        it = this->default_edge_styles().begin();
        it != this->default_edge_styles().end(); ++it) {
      entry.reset(default_edge_styles_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StyleManager::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qan.pb.StyleManager)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StyleManager* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StyleManager>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qan.pb.StyleManager)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qan.pb.StyleManager)
    MergeFrom(*source);
  }
}

void StyleManager::MergeFrom(const StyleManager& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qan.pb.StyleManager)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  styles_.MergeFrom(from.styles_);
  default_node_styles_.MergeFrom(from.default_node_styles_);
  default_edge_styles_.MergeFrom(from.default_edge_styles_);
  if (from.style_count() != 0) {
    set_style_count(from.style_count());
  }
}

void StyleManager::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qan.pb.StyleManager)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StyleManager::CopyFrom(const StyleManager& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qan.pb.StyleManager)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StyleManager::IsInitialized() const {

  return true;
}

void StyleManager::Swap(StyleManager* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StyleManager::InternalSwap(StyleManager* other) {
  std::swap(style_count_, other->style_count_);
  styles_.UnsafeArenaSwap(&other->styles_);
  default_node_styles_.Swap(&other->default_node_styles_);
  default_edge_styles_.Swap(&other->default_edge_styles_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StyleManager::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StyleManager_descriptor_;
  metadata.reflection = StyleManager_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StyleManager

// optional int32 style_count = 1;
void StyleManager::clear_style_count() {
  style_count_ = 0;
}
 ::google::protobuf::int32 StyleManager::style_count() const {
  // @@protoc_insertion_point(field_get:qan.pb.StyleManager.style_count)
  return style_count_;
}
 void StyleManager::set_style_count(::google::protobuf::int32 value) {
  
  style_count_ = value;
  // @@protoc_insertion_point(field_set:qan.pb.StyleManager.style_count)
}

// repeated .qan.pb.Style styles = 2;
int StyleManager::styles_size() const {
  return styles_.size();
}
void StyleManager::clear_styles() {
  styles_.Clear();
}
const ::qan::pb::Style& StyleManager::styles(int index) const {
  // @@protoc_insertion_point(field_get:qan.pb.StyleManager.styles)
  return styles_.Get(index);
}
::qan::pb::Style* StyleManager::mutable_styles(int index) {
  // @@protoc_insertion_point(field_mutable:qan.pb.StyleManager.styles)
  return styles_.Mutable(index);
}
::qan::pb::Style* StyleManager::add_styles() {
  // @@protoc_insertion_point(field_add:qan.pb.StyleManager.styles)
  return styles_.Add();
}
::google::protobuf::RepeatedPtrField< ::qan::pb::Style >*
StyleManager::mutable_styles() {
  // @@protoc_insertion_point(field_mutable_list:qan.pb.StyleManager.styles)
  return &styles_;
}
const ::google::protobuf::RepeatedPtrField< ::qan::pb::Style >&
StyleManager::styles() const {
  // @@protoc_insertion_point(field_list:qan.pb.StyleManager.styles)
  return styles_;
}

// map<string, int32> default_node_styles = 3;
int StyleManager::default_node_styles_size() const {
  return default_node_styles_.size();
}
void StyleManager::clear_default_node_styles() {
  default_node_styles_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
StyleManager::default_node_styles() const {
  // @@protoc_insertion_point(field_map:qan.pb.StyleManager.default_node_styles)
  return default_node_styles_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
StyleManager::mutable_default_node_styles() {
  // @@protoc_insertion_point(field_mutable_map:qan.pb.StyleManager.default_node_styles)
  return default_node_styles_.MutableMap();
}

// map<string, int32> default_edge_styles = 4;
int StyleManager::default_edge_styles_size() const {
  return default_edge_styles_.size();
}
void StyleManager::clear_default_edge_styles() {
  default_edge_styles_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
StyleManager::default_edge_styles() const {
  // @@protoc_insertion_point(field_map:qan.pb.StyleManager.default_edge_styles)
  return default_edge_styles_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
StyleManager::mutable_default_edge_styles() {
  // @@protoc_insertion_point(field_mutable_map:qan.pb.StyleManager.default_edge_styles)
  return default_edge_styles_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Node::kBaseFieldNumber;
const int Node::kStyleIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Node::Node()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:qan.pb.Node)
}

void Node::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  base_ = const_cast< ::gtpo::pb::Node*>(&::gtpo::pb::Node::default_instance());
}

Node::Node(const Node& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:qan.pb.Node)
}

void Node::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  base_ = NULL;
  style_id_ = 0;
}

Node::~Node() {
  // @@protoc_insertion_point(destructor:qan.pb.Node)
  SharedDtor();
}

void Node::SharedDtor() {
  if (this != default_instance_) {
    delete base_;
  }
}

void Node::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Node::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Node_descriptor_;
}

const Node& Node::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_quickqanava_2eproto();
  return *default_instance_;
}

Node* Node::default_instance_ = NULL;

Node* Node::New(::google::protobuf::Arena* arena) const {
  Node* n = new Node;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Node::Clear() {
// @@protoc_insertion_point(message_clear_start:qan.pb.Node)
  if (GetArenaNoVirtual() == NULL && base_ != NULL) delete base_;
  base_ = NULL;
  style_id_ = 0;
}

bool Node::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qan.pb.Node)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .gtpo.pb.Node base = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_base()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_style_id;
        break;
      }

      // optional int32 style_id = 2;
      case 2: {
        if (tag == 16) {
         parse_style_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &style_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qan.pb.Node)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qan.pb.Node)
  return false;
#undef DO_
}

void Node::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qan.pb.Node)
  // optional .gtpo.pb.Node base = 1;
  if (this->has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->base_, output);
  }

  // optional int32 style_id = 2;
  if (this->style_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->style_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:qan.pb.Node)
}

::google::protobuf::uint8* Node::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:qan.pb.Node)
  // optional .gtpo.pb.Node base = 1;
  if (this->has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->base_, false, target);
  }

  // optional int32 style_id = 2;
  if (this->style_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->style_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qan.pb.Node)
  return target;
}

int Node::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:qan.pb.Node)
  int total_size = 0;

  // optional .gtpo.pb.Node base = 1;
  if (this->has_base()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->base_);
  }

  // optional int32 style_id = 2;
  if (this->style_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->style_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Node::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qan.pb.Node)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Node* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Node>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qan.pb.Node)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qan.pb.Node)
    MergeFrom(*source);
  }
}

void Node::MergeFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qan.pb.Node)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_base()) {
    mutable_base()->::gtpo::pb::Node::MergeFrom(from.base());
  }
  if (from.style_id() != 0) {
    set_style_id(from.style_id());
  }
}

void Node::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qan.pb.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Node::CopyFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qan.pb.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Node::IsInitialized() const {

  return true;
}

void Node::Swap(Node* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Node::InternalSwap(Node* other) {
  std::swap(base_, other->base_);
  std::swap(style_id_, other->style_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Node::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Node_descriptor_;
  metadata.reflection = Node_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Node

// optional .gtpo.pb.Node base = 1;
bool Node::has_base() const {
  return !_is_default_instance_ && base_ != NULL;
}
void Node::clear_base() {
  if (GetArenaNoVirtual() == NULL && base_ != NULL) delete base_;
  base_ = NULL;
}
const ::gtpo::pb::Node& Node::base() const {
  // @@protoc_insertion_point(field_get:qan.pb.Node.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
::gtpo::pb::Node* Node::mutable_base() {
  
  if (base_ == NULL) {
    base_ = new ::gtpo::pb::Node;
  }
  // @@protoc_insertion_point(field_mutable:qan.pb.Node.base)
  return base_;
}
::gtpo::pb::Node* Node::release_base() {
  // @@protoc_insertion_point(field_release:qan.pb.Node.base)
  
  ::gtpo::pb::Node* temp = base_;
  base_ = NULL;
  return temp;
}
void Node::set_allocated_base(::gtpo::pb::Node* base) {
  delete base_;
  base_ = base;
  if (base) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:qan.pb.Node.base)
}

// optional int32 style_id = 2;
void Node::clear_style_id() {
  style_id_ = 0;
}
 ::google::protobuf::int32 Node::style_id() const {
  // @@protoc_insertion_point(field_get:qan.pb.Node.style_id)
  return style_id_;
}
 void Node::set_style_id(::google::protobuf::int32 value) {
  
  style_id_ = value;
  // @@protoc_insertion_point(field_set:qan.pb.Node.style_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Graph::kGraphFieldNumber;
const int Graph::kStyleManagerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Graph::Graph()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:qan.pb.Graph)
}

void Graph::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  graph_ = const_cast< ::gtpo::pb::Graph*>(&::gtpo::pb::Graph::default_instance());
  style_manager_ = const_cast< ::qan::pb::StyleManager*>(&::qan::pb::StyleManager::default_instance());
}

Graph::Graph(const Graph& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:qan.pb.Graph)
}

void Graph::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  graph_ = NULL;
  style_manager_ = NULL;
}

Graph::~Graph() {
  // @@protoc_insertion_point(destructor:qan.pb.Graph)
  SharedDtor();
}

void Graph::SharedDtor() {
  if (this != default_instance_) {
    delete graph_;
    delete style_manager_;
  }
}

void Graph::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_descriptor_;
}

const Graph& Graph::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_quickqanava_2eproto();
  return *default_instance_;
}

Graph* Graph::default_instance_ = NULL;

Graph* Graph::New(::google::protobuf::Arena* arena) const {
  Graph* n = new Graph;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Graph::Clear() {
// @@protoc_insertion_point(message_clear_start:qan.pb.Graph)
  if (GetArenaNoVirtual() == NULL && graph_ != NULL) delete graph_;
  graph_ = NULL;
  if (GetArenaNoVirtual() == NULL && style_manager_ != NULL) delete style_manager_;
  style_manager_ = NULL;
}

bool Graph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qan.pb.Graph)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .gtpo.pb.Graph graph = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_graph()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_style_manager;
        break;
      }

      // optional .qan.pb.StyleManager style_manager = 2;
      case 2: {
        if (tag == 18) {
         parse_style_manager:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_style_manager()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qan.pb.Graph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qan.pb.Graph)
  return false;
#undef DO_
}

void Graph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qan.pb.Graph)
  // optional .gtpo.pb.Graph graph = 1;
  if (this->has_graph()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->graph_, output);
  }

  // optional .qan.pb.StyleManager style_manager = 2;
  if (this->has_style_manager()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->style_manager_, output);
  }

  // @@protoc_insertion_point(serialize_end:qan.pb.Graph)
}

::google::protobuf::uint8* Graph::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:qan.pb.Graph)
  // optional .gtpo.pb.Graph graph = 1;
  if (this->has_graph()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->graph_, false, target);
  }

  // optional .qan.pb.StyleManager style_manager = 2;
  if (this->has_style_manager()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->style_manager_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qan.pb.Graph)
  return target;
}

int Graph::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:qan.pb.Graph)
  int total_size = 0;

  // optional .gtpo.pb.Graph graph = 1;
  if (this->has_graph()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->graph_);
  }

  // optional .qan.pb.StyleManager style_manager = 2;
  if (this->has_style_manager()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->style_manager_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qan.pb.Graph)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Graph* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Graph>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qan.pb.Graph)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qan.pb.Graph)
    MergeFrom(*source);
  }
}

void Graph::MergeFrom(const Graph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qan.pb.Graph)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_graph()) {
    mutable_graph()->::gtpo::pb::Graph::MergeFrom(from.graph());
  }
  if (from.has_style_manager()) {
    mutable_style_manager()->::qan::pb::StyleManager::MergeFrom(from.style_manager());
  }
}

void Graph::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qan.pb.Graph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph::CopyFrom(const Graph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qan.pb.Graph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph::IsInitialized() const {

  return true;
}

void Graph::Swap(Graph* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Graph::InternalSwap(Graph* other) {
  std::swap(graph_, other->graph_);
  std::swap(style_manager_, other->style_manager_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Graph::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_descriptor_;
  metadata.reflection = Graph_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Graph

// optional .gtpo.pb.Graph graph = 1;
bool Graph::has_graph() const {
  return !_is_default_instance_ && graph_ != NULL;
}
void Graph::clear_graph() {
  if (GetArenaNoVirtual() == NULL && graph_ != NULL) delete graph_;
  graph_ = NULL;
}
const ::gtpo::pb::Graph& Graph::graph() const {
  // @@protoc_insertion_point(field_get:qan.pb.Graph.graph)
  return graph_ != NULL ? *graph_ : *default_instance_->graph_;
}
::gtpo::pb::Graph* Graph::mutable_graph() {
  
  if (graph_ == NULL) {
    graph_ = new ::gtpo::pb::Graph;
  }
  // @@protoc_insertion_point(field_mutable:qan.pb.Graph.graph)
  return graph_;
}
::gtpo::pb::Graph* Graph::release_graph() {
  // @@protoc_insertion_point(field_release:qan.pb.Graph.graph)
  
  ::gtpo::pb::Graph* temp = graph_;
  graph_ = NULL;
  return temp;
}
void Graph::set_allocated_graph(::gtpo::pb::Graph* graph) {
  delete graph_;
  graph_ = graph;
  if (graph) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:qan.pb.Graph.graph)
}

// optional .qan.pb.StyleManager style_manager = 2;
bool Graph::has_style_manager() const {
  return !_is_default_instance_ && style_manager_ != NULL;
}
void Graph::clear_style_manager() {
  if (GetArenaNoVirtual() == NULL && style_manager_ != NULL) delete style_manager_;
  style_manager_ = NULL;
}
const ::qan::pb::StyleManager& Graph::style_manager() const {
  // @@protoc_insertion_point(field_get:qan.pb.Graph.style_manager)
  return style_manager_ != NULL ? *style_manager_ : *default_instance_->style_manager_;
}
::qan::pb::StyleManager* Graph::mutable_style_manager() {
  
  if (style_manager_ == NULL) {
    style_manager_ = new ::qan::pb::StyleManager;
  }
  // @@protoc_insertion_point(field_mutable:qan.pb.Graph.style_manager)
  return style_manager_;
}
::qan::pb::StyleManager* Graph::release_style_manager() {
  // @@protoc_insertion_point(field_release:qan.pb.Graph.style_manager)
  
  ::qan::pb::StyleManager* temp = style_manager_;
  style_manager_ = NULL;
  return temp;
}
void Graph::set_allocated_style_manager(::qan::pb::StyleManager* style_manager) {
  delete style_manager_;
  style_manager_ = style_manager;
  if (style_manager) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:qan.pb.Graph.style_manager)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace qan

// @@protoc_insertion_point(global_scope)
